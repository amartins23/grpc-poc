<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.pentaho</groupId>
    <artifactId>pentaho-ce-bundle-parent-pom</artifactId>
    <version>9.1.0.0-SNAPSHOT</version>
  </parent>

  <groupId>org.hitachivantara.grpc-poc</groupId>
  <artifactId>modules</artifactId>
  <packaging>pom</packaging>

  <name>Pentaho Community Edition Project: ${project.artifactId}</name>
 
  <developers>
    <developer>
      <name>Guilherme Raimundo</name>
      <email>guilherme.raimundo@hitachivantara.com</email>
      <roles>
        <role>developer</role>
      </roles>
    </developer>
  </developers>

  <properties>
    <protobuf.version>3.11.3</protobuf.version>
    <grpc.version>1.27.0</grpc.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-netty-shaded</artifactId>
        <version>${grpc.version}</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-protobuf</artifactId>
        <version>${grpc.version}</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-stub</artifactId>
        <version>${grpc.version}</version>
      </dependency>
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-api</artifactId>
        <version>${grpc.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <modules>
    <module>apis</module>
    <module>impls</module>
    <module>dev</module>
  </modules>

  <profiles>
    <profile>
      <id>extract-proto</id>
      <!-- Using folder based markers for profile activation -->
      <activation>
        <file>
          <exists>${basedir}/src/build/proto</exists>
        </file>
      </activation>

      <properties>
        <protoSourceRoot>${project.build.directory}/protoc-src</protoSourceRoot>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <!-- Unpack proto files from listed dependency artifacts. -->
                <id>unpack-proto-api</id>
                <goals>
                  <goal>unpack-dependencies</goal>
                </goals>
                <phase>generate-sources</phase>
                <configuration>
                  <includeArtifactIds>${proto.api.artifactIds}</includeArtifactIds>
                  <includes>**/*.proto</includes>
                  <outputDirectory>${protoSourceRoot}</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>

    </profile>

    <profile>
      <!-- Generates java code for proto definitions in the dependencies referenced in the
           property proto.api.artifactIds. -->
      <id>proto-to-java</id>

      <!-- Using folder based markers for profile activation -->
      <activation>
        <file>
          <exists>${basedir}/src/build/proto/gen-java</exists>
        </file>
      </activation>

      <dependencies>
        <dependency>
          <groupId>io.grpc</groupId>
          <artifactId>grpc-protobuf</artifactId>
        </dependency>
        <dependency>
          <groupId>io.grpc</groupId>
          <artifactId>grpc-stub</artifactId>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <groupId>org.xolstice.maven.plugins</groupId>
            <artifactId>protobuf-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>generate-grpc-java</id>
                <goals>
                  <goal>compile</goal>
                  <goal>compile-custom</goal>
                </goals>
                <configuration>
                  <pluginId>grpc-java</pluginId>
                  <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
                  <outputDirectory>${project.build.directory}/generated-sources/protobuf/java</outputDirectory>
                  <clearOutputDirectory>false</clearOutputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>

    </profile>

    <profile>
      <!-- Generates js code for proto definitions in the dependencies referenced in the
             property proto.api.artifactIds. -->
      <id>proto-to-js</id>

      <!-- Using folder based markers for profile activation -->
      <activation>
        <file>
          <exists>${basedir}/src/build/proto/gen-js</exists>
        </file>
      </activation>

      <properties>
        <grpc-web.version>1.0.7</grpc-web.version>
        <protoc.js.import-style>commonjs</protoc.js.import-style>
      </properties>

      <build>
        <plugins>
          <plugin>
            <groupId>org.xolstice.maven.plugins</groupId>
            <artifactId>protobuf-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>generate-grpc-js</id>
                <goals>
                  <goal>compile-js</goal>
                  <goal>compile-custom</goal>
                </goals>
                <configuration>
                  <javaScriptOptions>import_style=${protoc.js.import-style}</javaScriptOptions>
                  <pluginId>grpc-web</pluginId>
                  <outputDirectory>${project.build.directory}/generated-sources/protobuf/js</outputDirectory>
                  <clearOutputDirectory>false</clearOutputDirectory>
                  <!-- Because there is no maven artifact for the grpc-web protoc plugin, we are referencing it from project root folder.
                       Not pretty or robust but functional for the POC. In the future use toolchain or other. -->
                  <pluginExecutable>${project.rootdir}/bin/protoc-gen-grpc-web-${grpc-web.version}-${os.detected.classifier}</pluginExecutable>
                  <pluginParameter>import_style=${protoc.js.import-style},mode=grpcwebtext</pluginParameter>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.6.2</version>
      </extension>
    </extensions>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.xolstice.maven.plugins</groupId>
          <artifactId>protobuf-maven-plugin</artifactId>
          <version>0.6.1</version>
          <configuration>
            <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
            <attachProtoSources>false</attachProtoSources>
            <protoSourceRoot>${protoSourceRoot}</protoSourceRoot>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
